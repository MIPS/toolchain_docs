<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ab2_jmk_fcb">
 <title>TLB - 32-bit Physical Memory</title>
 <conbody>
  <p>The 32-bit API is described below:</p>
  <table id="table_zpv_jmk_fcb">
   <title>TLB - 32-bit Physical Memory functions</title>
   <tgroup cols="2">
    <colspec colnum="1" colname="col1"/>
    <colspec colnum="2" colname="col2"/>
    <thead>
     <row>
      <entry><b>Function prototype</b></entry>
      <entry><b>Description</b></entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><codeph>void mips_init_tlb (void)</codeph></entry>
      <entry>Initialises and invalidates the whole TLB.</entry>
     </row>
     <row>
      <entry><codeph>unsigned int mips_tlb_size (void)</codeph></entry>
      <entry>Returns the number of entries in the TLB.</entry>
     </row>
     <row>
      <entry><codeph>void mips_tlbinval (tlbhi_r hi)</codeph></entry>
      <entry>Probes the TLB for an entry matching hi, and if present invalidates it.</entry>
     </row>
     <row>
      <entry><codeph>void mips_tlbinvalall (void)</codeph></entry>
      <entry>Invalidate the whole TLB.</entry>
     </row>
     <row>
      <entry><codeph>void mips_tlbri2 (tlbhi_t *phi, tlblo_t *plo0, tlblo_t *plo1, unsigned int
        *pmsk,int index)</codeph></entry>
      <entry>Reads the TLB entry with specified byindex,and returns the EntryHi, EntryLo0, EntryLo1
       and PageMask parts In *phi, *plo0, *plo1 and *pmsk respectively.</entry>
     </row>
     <row>
      <entry><codeph>void mips_tlbwi2 (tlbhi_t hi, tlblo_t lo0, tlblo_t lo1, unsigned int pmsk, int
        index)</codeph></entry>
      <entry>Writes hi, lo0, lo1 and msk into the TLB entry specified by index.</entry>
     </row>
     <row>
      <entry><codeph>void mips_tlbwr2 (tlbhi_t hi, tlblo_t lo0, tlblo_t lo1, unsigned int
        pmsk)</codeph></entry>
      <entry>Writes hi, lo0, lo1 and msk into the TLB entry specified by the Random
       register.</entry>
     </row>
     <row>
      <entry><codeph>int mips_tlbprobe2 (tlbhi_t hi, tlblo_t *plo0, tlblo_t *plo1, unsigned int
        *pmsk)</codeph></entry>
      <entry>Probes the TLB for an entry matching hi and returns its index, or -1 if not found. If
       found, then the EntryLo0, EntryLo1 and PageMask parts of the entry are also returned in
       *plo0, *plo1 and *pmsk respectively.</entry>
     </row>
     <row>
      <entry><codeph>int mips_tlbrwr2 (tlbhi_t hi, tlblo_t lo0, tlblo_t lo1, unsigned int
        pmsk)</codeph></entry>
      <entry>
       <p>Probes the TLB for an entry matching hi and if present rewrites that entry. Otherwise
        updates a random entry.</p>
       <p>A safe way to update the TLB.</p>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <p><codeph>tlbhi_t</codeph>,<codeph> tlblo_t</codeph> and <codeph>pmsk</codeph> are 32-bits wide
   and their usage for the relevant EntryHi, EntryLo0 and EntryLo1 and PageMask fields should be
   consulted in the <ph conkeyref="c_biblio/mips_arch_prog_volIII"/>.
   Users will also need to implement the TLB refill
   exception handler and general exception handlers for TLB refill events if using virtual memory
   management features.</p>
 </conbody>
</concept>
